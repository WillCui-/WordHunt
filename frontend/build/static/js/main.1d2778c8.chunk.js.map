{"version":3,"sources":["Tile.js","Board.js","Results.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","Button","variant","onKeyDown","this","props","style","background","height","width","value","React","Component","Square","border","Board","renderRow","row","key","rowItems","i","push","letters","tabIndex","items","renderBoard","Results","results","length","ListGroup","Item","Card","Header","as","generateListGroup","Game","useState","setLetters","setResults","completeBoard","setCompleteBoard","useEffect","handleKey","e","c","keyCode","l","slice","match","concat","toUpperCase","document","addEventListener","removeEventListener","formData","FormData","messages","forEach","append","axios","post","then","res","data","catch","error","console","log","response","Body","paddingBottom","Container","fluid","Row","className","padding","Col","md","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d2778c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Tile extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Button \r\n                variant=\"light\"\r\n                onKeyDown={this.props.onKeyDown}\r\n                style={{\r\n                    background: '#caa472',\r\n                    'fontSize': '20px',\r\n                    'fontWeight': '600',\r\n                    height: '50px', \r\n                    width: '50px',}}>\r\n                {this.props.value}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tile;","import React from \"react\";\r\nimport Tile from \"./Tile.js\";\r\n\r\nfunction Board(props) {\r\n    \r\n    function renderTile(key) {\r\n        return (\r\n            <Tile \r\n                value = {props.letters[key]}\r\n                key = {key}\r\n                tabIndex=\"0\"\r\n            />\r\n        )\r\n    }\r\n\r\n    function renderRow(row) {\r\n        let rowItems = [];\r\n        for(var i = 0; i < 4; i++) {\r\n            rowItems.push(renderTile(row * 4 + i));\r\n        }\r\n\r\n        return (\r\n            <div key={row}>\r\n                {rowItems}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderBoard() {\r\n        let items = [];\r\n        for(var i = 0; i < 4; i++) {\r\n            items.push(renderRow(i))\r\n        }\r\n\r\n        return (\r\n            <Square\r\n                value={items}> \r\n            </Square>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderBoard()}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <div style={{\r\n            background: 'rgb(117, 38, 38)',\r\n            border: '3px solid yellowgreen',\r\n            'borderRadius': '10px',\r\n            height: '220px',\r\n            'paddingTop': '7px',\r\n            width: '220px',\r\n            'zIndex': -999,\r\n        }}>\r\n            {props.value}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nclass Results extends React.Component {\r\n    generateListGroup() {\r\n        let results = [];\r\n        for(var i = 0; i < this.props.results.length; i++) {\r\n            results.push(<ListGroup.Item key={i}>{this.props.results[i]}</ListGroup.Item>)\r\n        }\r\n\r\n        return (\r\n            <ListGroup variant='flush' style={{'textAlign': 'left'}}>\r\n                {results}\r\n            </ListGroup>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header as=\"h5\">Possible Words</Card.Header>\r\n                {this.generateListGroup()}\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport Board from './Board.js';\r\nimport Results from './Results.js';\r\n\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction Game(props) {\r\n    const [letters, setLetters] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    const [completeBoard, setCompleteBoard] = useState(false)\r\n\r\n    useEffect(() => {\r\n        function handleKey(e) {\r\n            const c = e.key;\r\n            if (e.keyCode === 8) {\r\n                setLetters(l => l.slice(0, l.length - 1));\r\n                setCompleteBoard(false)\r\n            } else if (letters.length < 16 && c.length === 1 && c.match(/[a-zA-Z]/i)) {\r\n                setLetters(l => l.concat([c.toUpperCase()]));\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKey);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('keydown', handleKey);\r\n        }\r\n    }, [letters]);\r\n\r\n    if (letters.length === 16 && completeBoard === false) {\r\n        setCompleteBoard(true);\r\n\r\n        const formData = new FormData();\r\n        let messages = '';\r\n        letters.forEach(l => {\r\n            messages += l;\r\n        });\r\n        formData.append(\"letters\", messages);\r\n        axios.post(`http://localhost:5000/api/letters`, formData)\r\n            .then(res => {\r\n                setResults(res.data['results']);\r\n            }).catch(error => {\r\n                console.log(error.response);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Card style={{\r\n            width: '100%', \r\n        }}>\r\n            <Card.Header as=\"h5\">WordHunt Helper</Card.Header>\r\n            <Card.Body style={{\r\n                paddingBottom: '50px',\r\n            }}>\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-md-center\" style={{padding: '50px'}}>\r\n                        <Col md='auto'>\r\n                            <Board \r\n                                letters={ letters }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Results \r\n                                results={ results }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Game;","import './App.css';\nimport Game from './Game.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// React-Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}